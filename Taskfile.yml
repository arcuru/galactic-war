# https://taskfile.dev

version: "3"

tasks:
  default:
    cmd: task --list
    silent: true
  ci:full:
    desc: Run CI locally in containers
    cmd: act
  ci:local:
    desc: Run CI locally
    aliases: [ci]
    deps:
      [
        audit,
        doc,
        fmt,
        test,
        nix:check,
        nix:build,
        clippy,
        pre-commit,
        build,
        build:docker,
      ]
  nix:check:
    desc: Run Nix CI checks
    cmds:
      - nix flake check
  nix:build:
    desc: Run Nix Build
    cmds:
      - nix build
  clippy:
    desc: Run clippy on all workspace crates
    cmd: cargo clippy --workspace
  pre-commit:
    desc: Run pre-commit
    cmd: pre-commit run --all-files --show-diff-on-failure
  fmt:
    desc: Run all formatters
    cmds:
      - cargo fmt --all
      - alejandra .
  test:
    desc: Run all tests in workspace
    aliases: [t]
    cmd: cargo nextest run --workspace
  doc:
    desc: Build the documentation for all workspace crates
    cmd: cargo doc --workspace
  audit:
    desc: Run cargo security audit
    cmd: cargo audit
  build:
    desc: Build the entire workspace
    aliases: [b]
    cmd: cargo build --workspace
  run:
    desc: Run the galactic-war server binary
    aliases: [r]
    cmd: cargo run --bin galactic-war
  dev:
    desc: Run the galactic-war server in dev mode with consistent database
    aliases: [d]
    env:
      DATABASE_URL: "sqlite:.cache/galactic-war/dev.db"
      GALACTIC_WAR_PERSISTENCE: "true"
      GALACTIC_WAR_AUTO_SAVE_INTERVAL: "5"
      GALACTIC_WAR_WRITE_COALESCING: "true"
    cmds:
      - mkdir -p ".cache/galactic-war"
      - cargo run --bin galactic-war
  build:lib:
    desc: Build only the library crate
    cmd: cargo build -p galactic-war
  build:bin:
    desc: Build only the binary crate
    cmd: cargo build -p galactic-war-bin
  test:lib:
    desc: Run tests for library crate only
    cmd: cargo nextest run -p galactic-war
  test:bin:
    desc: Run tests for binary crate only
    cmd: cargo nextest run -p galactic-war-bin
  build:docker:
    desc: Build the docker image
    cmd: docker build -t galactic-war .
  run:docker:
    desc: Run the docker image
    cmd: docker run --rm -p 3050:3050 --name galactic-war galactic-war:latest
    deps: [build:docker]
